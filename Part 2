IN	  2,8
	  OUT	  2,9
	  CHK	  2,8
	JCC  3,1,3
	TRAP	2
	STR	1,2,10				;Copy R1 to R2 + 10 
	LDA	0,2,4				;R0 GETS R2 + 4
	LDX	2,8					;Load 8 to R2	
	STX	2,6					;Store R2 in '6'		?
	JZ	2,6					;Jump to 6 R2 != 0		?
	JNE	2,6					;Jump to 6 if R2 !=	_	?
	JCC	1,2,6				;Jump to 6 if R1 = R2
	JMA	2,6					;Jump to 6 if R2     	?
	JSR	2,6					;Jump to 6 if R2		?
	SOB	1,2,6				;Subtract 1 from R2 if R2 != 6		?
	JGE	1,2,8				;Jump to 8 if R1 >= R2
	RFS	10					;Return 10
	AMR	2,2,8				;Add 8 to R2 and return to R2
	SMR	2,3,0				;Subtract Memory 
	AIR	2,9					;Add 9 to R2
	SIR	2,8					;Subtract 8 from R2
	MLT	2,1					;Multiply R2 * R1
	DVD	1,2					;Divide R1 / R2
	TRR	2,3					;Test if R2 = R3
	AND	2,3					;If R2 = R3 return 1
	NOT	2					;Invert bits in R2
	ORR	1,3					;R1 'OR'ed with R3
	SRC	3,2,1,0				;Shift R3 by 2 to the right		?
	RRC	2,4,1,1				;Rotate Right on R2 by 4		?
	IN	2,8					;Read from 8 store in R2
	OUT	2,9					;Send to 9 from R2
	CHK	2,8
